{"version":3,"sources":["components/TodoItem.js","components/TodosList.js","components/Header.js","components/InputTodo.js","components/TodoContainer.js","index.js"],"names":["TodoItem","alert","this","props","todo","completed","id","title","className","type","checked","onChange","handleChangeProps","onClick","deleteTodoProps","style","fontStyle","color","opacity","textDecoration","React","Component","TodosList","todos","map","key","Header","prevProps","prevState","bgColor","Math","floor","random","headerSpan","document","getElementById","innerHTML","backgroundColor","padding","lineHeight","fontSize","marginBottom","InputTodo","state","e","setState","target","name","value","handleSubmit","preventDefault","addTodoProps","onSubmit","placeholder","TodoContainer","show","handleChange","delTodo","axios","delete","then","reponse","filter","addTodoItem","post","response","data","get","ReactDOM","render"],"mappings":"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","file":"static/js/main.06560c67.chunk.js","sourcesContent":["\r\nimport React from \"react\"\r\n\r\nclass TodoItem extends React.Component {\r\n    componentWillUnmount() {\r\n        alert(\"Item about to be deleted!\");\r\n      }\r\n  render() {\r\n    const completedStyle = {\r\n        fontStyle: \"italic\",\r\n        color: \"#d35e0f\",\r\n        opacity: 0.4,\r\n        textDecoration: \"line-through\",\r\n      }\r\n      const { completed, id, title } = this.props.todo\r\n    return( \r\n    <li className=\"todo-item\">\r\n    <input\r\n      type=\"checkbox\"\r\n      checked={completed}\r\n      onChange={() => this.props.handleChangeProps(id)}\r\n    />\r\n    <button onClick={() => this.props.deleteTodoProps(id)}>\r\n      Delete\r\n    </button>\r\n    <span style={completed ? completedStyle : null}>\r\n      {title}\r\n    </span>\r\n  </li>)\r\n  }\r\n}\r\n\r\nexport default TodoItem\r\n","import React from \"react\"\r\nimport TodoItem from \"./TodoItem\";\r\nclass TodosList extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.todos.map(todo => (\r\n          <TodoItem deleteTodoProps={this.props.deleteTodoProps} handleChangeProps={this.props.handleChangeProps} key={todo.id} todo={todo} />\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TodosList","/*\r\nimport React from \"react\"\r\n\r\nconst Header = () => {\r\n    const headerStyle = {\r\n        padding: \"20px 0\",\r\n        lineHeight: \"2em\",\r\n        color: \"gray\"\r\n      }\r\n  return (\r\n    <header>\r\n    <h1 style={headerStyle}>Simple Todo App</h1>\r\n    <p style={{ fontSize: \"19px\" }}>\r\n      Please add to-dos item(s) through the input field\r\n    </p>\r\n  </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n*/\r\nimport React, { Component } from \"react\"\r\n\r\nclass Header extends Component {\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n\r\n        var x = Math.floor(Math.random() * 256);\r\n        var y = Math.floor(Math.random() * 256);\r\n        var z = Math.floor(Math.random() * 256);\r\n        var bgColor = \"rgb(\" + x + \",\" + y + \",\" + z + \")\";\r\n      \r\n        if (prevProps.headerSpan !== this.props.headerSpan) {\r\n          document.getElementById(\"inH1\").innerHTML = \"clicked\";\r\n          document.getElementById(\"inH1\").style.backgroundColor = bgColor;\r\n        }\r\n      }\r\n\r\n  render() {\r\n    const headerStyle = {\r\n      padding: \"20px 0\",\r\n      lineHeight: \"2em\",\r\n    }\r\n    return (\r\n      <header style={headerStyle}>\r\n        <h1 style={{ fontSize: \"25px\", marginBottom: \"15px\" }}>\r\n          Simple Todo App <span id=\"inH1\"></span>\r\n        </h1>\r\n        <p style={{ fontSize: \"19px\" }}>\r\n          Please add to-dos item(s) through the input field\r\n        </p>\r\n      </header>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header","import React, { Component } from \"react\"\r\n\r\nclass InputTodo extends Component {\r\n    state={title: \"\"};\r\n    onChange = e => {\r\n        this.setState({\r\n          [e.target.name]: e.target.value\r\n        });\r\n      };\r\n      handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.addTodoProps(this.state.title);\r\n        this.setState({\r\n            title: \"\"\r\n          });\r\n      };\r\n  render() {\r\n    return (\r\n    <form onSubmit={this.handleSubmit} className=\"form-container\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"input-text\"\r\n          placeholder=\"Add todo...\"\r\n          value={this.state.title}\r\n          name=\"title\"\r\n          onChange={this.onChange}\r\n        />\r\n        <input type=\"submit\" className=\"input-submit\" value=\"Submit\" />\r\n      </form>\r\n    )\r\n  }\r\n}\r\nexport default InputTodo","import React from \"react\"\r\nimport TodosList from \"./TodosList\";\r\nimport Header from \"./Header\"\r\nimport InputTodo from \"./InputTodo\"\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport axios from \"axios\";\r\nclass TodoContainer extends React.Component {\r\n    state = {\r\n        todos:[],\r\n        show: false\r\n       };\r\n       \r\n       \r\n      handleChange = id => {\r\n        this.setState({\r\n          todos: this.state.todos.map(todo => {\r\n            if (todo.id === id) {\r\n              todo.completed = !todo.completed\r\n            }\r\n            return todo\r\n          }),\r\n          show: !this.state.show,\r\n        })\r\n      }\r\n\r\n      delTodo = id => {\r\n        axios\r\n          .delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\r\n          .then(reponse =>\r\n            this.setState({\r\n              todos: [\r\n                ...this.state.todos.filter(todo => {\r\n                  return todo.id !== id\r\n                }),\r\n              ],\r\n            })\r\n          )\r\n      };\r\n      \r\n      addTodoItem = title => {\r\n        axios\r\n          .post(\"https://jsonplaceholder.typicode.com/todos\", {\r\n            title: title,\r\n            completed: false,\r\n          })\r\n          .then(response =>\r\n            this.setState({\r\n              todos: [...this.state.todos, response.data],\r\n            })\r\n          )\r\n      }\r\n      \r\n      componentDidMount() {\r\n        axios.get(\"https://jsonplaceholder.typicode.com/todos?_limit=10\")\r\n          .then(response => this.setState({ todos: response.data }));\r\n      }\r\n       \r\n      render() {\r\n        return (\r\n           \r\n          <div>\r\n            <Header headerSpan={this.state.show}/>\r\n            <InputTodo addTodoProps={this.addTodoItem}/>\r\n            <TodosList \r\n                deleteTodoProps={this.delTodo} \r\n                handleChangeProps={this.handleChange} \r\n                todos={this.state.todos} />\r\n          </div>\r\n        );\r\n       }\r\n}\r\nexport default TodoContainer\r\n\r\n/*\r\ntodos: [\r\n          {\r\n            id: uuidv4(),\r\n            title: \"Setup development environment\",\r\n            completed: true\r\n          },\r\n          {\r\n            id: uuidv4(),\r\n            title: \"Develop website and add content\",\r\n            completed: false\r\n          },\r\n          {\r\n            id: uuidv4(),\r\n            title: \"Deploy to live server\",\r\n            completed: false\r\n          }\r\n        ]\r\n        */","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport \"./App.css\"\r\n//component file\r\nimport TodoContainer from \"./components/TodoContainer\"\r\nReactDOM.render(<TodoContainer />, document.getElementById(\"root\"))"],"sourceRoot":""}